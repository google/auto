package com.google.auto.value.processor;

final class GwtSerializerVm {

    static final String VM = "## Template for each generated AutoValue_Foo_CustomFieldSerializer class.\n"
            + "## This template uses the Apache Velocity Template Language (VTL).\n"
            + "## The variables ($pkg, $props, and so on) are defined by the fields of\n"
            + "## GwtSerialization.GwtTemplateVars.\n"
            + "##\n"
            + "## Comments, like this one, begin with ##. The comment text extends up to and including the newline\n"
            + "## character at the end of the line. So comments also serve to join a line to the next one.\n"
            + "## Velocity deletes a newline after a directive (#if, #foreach, #end etc) so ## is not needed there.\n"
            + "## That does mean that we sometimes need an extra blank line after such a directive.\n"
            + "##\n"
            + "## A post-processing step will remove unwanted spaces and blank lines, but will not join two lines.\n"
            + "## TODO(emcmanus): perform the post-processing.\n"
            + "#if (!$pkg.empty)\n"
            + "package $pkg;\n"
            + "#end\n"
            + "\n"
            + "#foreach ($i in $imports)\n"
            + "import $i;\n"
            + "#end\n"
            + "import com.google.gwt.user.client.rpc.CustomFieldSerializer;\n"
            + "import com.google.gwt.user.client.rpc.SerializationException;\n"
            + "import com.google.gwt.user.client.rpc.SerializationStreamReader;\n"
            + "import com.google.gwt.user.client.rpc.SerializationStreamWriter;\n"
            + "\n"
            + "@${generated}(\"com.google.auto.value.processor.AutoValueProcessor\")\n"
            + "public final class $serializerClass$formalTypes extends CustomFieldSerializer<$subclass$actualTypes> {\n"
            + "\n"
            + "  public static $formalTypes $subclass$actualTypes instantiate(\n"
            + "      SerializationStreamReader streamReader) throws SerializationException {\n"
            + "#foreach ($p in $props)\n"
            + "    #if ($p.castingUnchecked)\n"
            + "    @SuppressWarnings(\"unchecked\")\n"
            + "    #end\n"
            + "    $p.type $p = ${p.gwtCast}streamReader.read${p.gwtType}();\n"
            + "#end\n"
            + "#if ($useBuilder)\n"
            + "    return (${subclass}${actualTypes}) new ${subclass}.Builder${actualTypes}()\n"
            + "  #foreach ($p in $props)\n"
            + "        .${builderSetters[$p.name].iterator().next().name}($p)\n"
            + "  #end\n"
            + "        .build();\n"
            + "#else\n"
            + "    return new ${subclass}$actualTypes(\n"
            + "        #foreach ($p in $props) $p #if ($foreach.hasNext) , #end #end);\n"
            + "#end\n"
            + "  }\n"
            + "\n"
            + "  public static $formalTypes void serialize(\n"
            + "      SerializationStreamWriter streamWriter,\n"
            + "      $subclass$actualTypes instance) throws SerializationException {\n"
            + "#foreach ($p in $props)\n"
            + "    streamWriter.write${p.gwtType}(instance.${p.getter}());\n"
            + "#end\n"
            + "  }\n"
            + "\n"
            + "  public static $formalTypes void deserialize(\n"
            + "      @SuppressWarnings(\"unused\") SerializationStreamReader streamReader,\n"
            + "      @SuppressWarnings(\"unused\") $subclass$actualTypes instance) {\n"
            + "    // instantiate already did all the work.\n"
            + "  }\n"
            + "\n"
            + "  // This dummy field is a hash of the fields in $subclass that will change if they do, including\n"
            + "  // if their order changes. This is because GWT identity for a class that has a serializer is\n"
            + "  // based on the fields of the serializer rather than the class itself.\n"
            + "  @SuppressWarnings(\"unused\")\n"
            + "  private int dummy_$classHashString;\n"
            + "\n"
            + "  @Override\n"
            + "  public void deserializeInstance(\n"
            + "      SerializationStreamReader streamReader,\n"
            + "      $subclass$actualTypes instance) {\n"
            + "    deserialize(streamReader, instance);\n"
            + "  }\n"
            + "\n"
            + "  @Override\n"
            + "  public boolean hasCustomInstantiateInstance() {\n"
            + "    return true;\n"
            + "  }\n"
            + "\n"
            + "  @Override\n"
            + "  public $subclass$actualTypes instantiateInstance(\n"
            + "      SerializationStreamReader streamReader) throws SerializationException {\n"
            + "    return instantiate(streamReader);\n"
            + "  }\n"
            + "\n"
            + "  @Override\n"
            + "  public void serializeInstance(\n"
            + "    SerializationStreamWriter streamWriter,\n"
            + "    $subclass$actualTypes instance) throws SerializationException {\n"
            + "    serialize(streamWriter, instance);\n"
            + "  }\n"
            + "}\n";

    private GwtSerializerVm() {

    }

}
